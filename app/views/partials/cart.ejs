<%
var globals = { pageName, isAdmin, isClient, isGuest };
%>
<div class="buttons-row">
  <%- include('./open-ordering-button.ejs', { ...globals }) %>
  <button onclick="clearCart()" class="cancel">Ачысціць кошык</button>
</div>
<p id="cart-cost" class="cart-cost"></p>
<%- include('./items-set.ejs', { ...globals }) %>

<script>
  updateCart();

  function updateCart() {
    fetch(`/cart/api/get-cart-items`)
      .then(res => res.json())
      .then(items => {
        const itemsSet = $('#is__items-set');
        itemsSet.innerHTML = '';
        items.forEach(item => {
          let {
            item_id,
            title,
            price,
            quantity,
            cart_quantity,
            image,
            is_in_stock,
            is_available,
            is_in_favs
          } = item;
          let id = +item_id;
          title = safe(title);
          price = +price;
          quantity = +quantity;
          cart_quantity = +cart_quantity;
          image = safe(image);
          is_in_stock = !!is_in_stock;
          is_available = !!is_available;
          is_in_favs = !!is_in_favs;
          itemsSet.innerHTML += `
            <div id="item-${id}" class="item-block" onclick="itemBlockOnClick(event, ${id})">
              <img src="${image}" class="item-image" />
              <p class="item-title">${title}</p>
              <p class="item-price">${price.toFixed(2)} Br</p>
              <input type="number" min="1" max="99" value="${cart_quantity}" onchange="onItemCartQuantityChange(event, ${id})" onclick="event.stopPropagation()" class="item-cart-quantity" />
              <div class="item-btns">
                <button class="item-button item-tgl-in-favs"></button>
                <button class="item-button item-tgl-in-cart" style="background-image: url('/images/interface/rem_from_cart_btn.png');"></button>
              </div>
            </div>
          `;
          $(`#item-${id} .item-tgl-in-favs`).style.backgroundImage =
            `url('${getInFavsToggleBtnImg(is_in_favs)}')`;
          let tglInCartBtn = $(`#item-${id} .item-tgl-in-cart`);
          if (!is_available) {
            $(`#item-${id}`).innerHTML += '<p class="item-not-available">Недаступна</p>';
          } else if (!is_in_stock) {
            $(`#item-${id}`).innerHTML += '<p class="item-not-in-stock">Няма ў наяўнасці</p>';
          }
        });
      });
    updateCartCost();
  }

  function clearCart() {
    fetch(`/cart/api/clear-cart`, {
        method: 'post'
      })
      .then(res => {
        if (!res.ok) {
          return res.text().then(errorMsg => alert(errorMsg));
        }
        updateCart();
      });
  }

  function updateCartCost() {
    fetch(`/cart/api/get-cart-cost`)
      .then(res => res.json())
      .then(data => {
        $('#cart-cost').textContent = `Кошт: ${data.cart_cost.toFixed(2)} Br`;
      });
  }

  function itemBlockOnClick(e, id) {
    id = +id;
    if (e.target === $(`#item-${id} .item-tgl-in-favs`)) {
      toggleItemInFavs(id);
      return;
    } else if (e.target === $(`#item-${id} .item-tgl-in-cart`)) {
      toggleItemInCart(id);
      return;
    }
    window.location.href = `/item/${id}`;
  }

  function onItemCartQuantityChange(e, id) {
    id = +id;
    $(`#item-${id} .item-cart-quantity`).disabled = true;
    const newItemCartQuantity = +e.target.value;
    fetch(`/cart/api/update-cart-item-quantity`, {
        method: 'post',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          item_id: id,
          cart_quantity: newItemCartQuantity
        })
      })
      .then(res => res.json())
      .then(json => {
        $(`#item-${id} .item-cart-quantity`).value = json.new_cart_quantity;
        $(`#item-${id} .item-cart-quantity`).disabled = false;
        updateCartCost();
      });
  }

  function toggleItemInFavs(id) {
    id = +id;
    fetch(`/cart/api/toggle-in-favs/${id}`, {
        method: 'post'
      })
      .then(res => res.json())
      .then(json => {
        $(`#item-${id} .item-tgl-in-favs`).style.backgroundImage =
          `url(${getInFavsToggleBtnImg(json.is_in_favs)})`;
      });
  }

  function getInFavsToggleBtnImg(is_in_favs) {
    return is_in_favs ? '/images/interface/rem_from_favs_btn.png' : '/images/interface/add_to_favs_btn.png'
  }

  function toggleItemInCart(id) {
    id = +id;
    fetch(`/cart/api/toggle-in-cart/${id}`, {
        method: 'post'
      })
      .then(res => res.json())
      .then(json => {
        if (!json.is_in_cart) {
          $(`#item-${id}`).remove();
          updateCartCost();
        }
      });
  }
</script>